// <auto-generated />
using System;
using Infrastructure.Data.Postgres.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Data.Postgres.Migrations
{
    [DbContext(typeof(PostgresContext))]
    partial class PostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Data.Postgres.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 300, DateTimeKind.Utc).AddTicks(9849),
                            IsDeleted = false,
                            Name = "Information Tech."
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 300, DateTimeKind.Utc).AddTicks(9858),
                            IsDeleted = false,
                            Name = "Human Researcher"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 300, DateTimeKind.Utc).AddTicks(9864),
                            IsDeleted = false,
                            Name = "Accounting"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 300, DateTimeKind.Utc).AddTicks(9870),
                            IsDeleted = false,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 300, DateTimeKind.Utc).AddTicks(9876),
                            IsDeleted = false,
                            Name = "Purchasing"
                        });
                });

            modelBuilder.Entity("Infrastructure.Data.Postgres.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(285),
                            DepartmentId = 1,
                            Email = "batuhan@",
                            FullName = "Batuhan Yavuz",
                            IsDeleted = false,
                            Password = "123",
                            Phone = "0544"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(292),
                            DepartmentId = 1,
                            Email = "utku@",
                            FullName = "Utku Yavuz",
                            IsDeleted = false,
                            Password = "123",
                            Phone = "0545"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(299),
                            DepartmentId = 2,
                            Email = "alperen@",
                            FullName = "Alperen Karakuş",
                            IsDeleted = false,
                            Password = "123",
                            Phone = "0546"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(305),
                            DepartmentId = 3,
                            Email = "berke@",
                            FullName = "Berke Taşkur",
                            IsDeleted = false,
                            Password = "123",
                            Phone = "0547"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(382),
                            DepartmentId = 4,
                            Email = "berkay@",
                            FullName = "Berkay Öztürk",
                            IsDeleted = false,
                            Password = "123",
                            Phone = "0548"
                        });
                });

            modelBuilder.Entity("Infrastructure.Data.Postgres.Entities.EmployeeRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("RoleID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("Infrastructure.Data.Postgres.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(957),
                            IsAdmin = true,
                            IsDeleted = false,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(964),
                            IsAdmin = true,
                            IsDeleted = false,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(970),
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Software Developer"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(976),
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Sales Representative"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 8, 11, 45, 27, 301, DateTimeKind.Utc).AddTicks(1022),
                            IsAdmin = false,
                            IsDeleted = false,
                            Name = "Purchasing Officer"
                        });
                });

            modelBuilder.Entity("Infrastructure.Data.Postgres.Entities.Employee", b =>
                {
                    b.HasOne("Infrastructure.Data.Postgres.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
